{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#include <algoviz/SVG.hpp>\n",
    "#include \"Level.hpp\"\n",
    "#include \"Protagonist.hpp\"\n",
    "#include \"Item.hpp\"\n",
    "#include \"Itemverwaltung.hpp\"\n",
    "using namespace std;\n",
    "\n",
    "MouseState maus;\n",
    "\n",
    "SVG regeln1 = SVG(600, 500);\n",
    "\n",
    "Rect hintergrund = Rect(297,247,6,6,&regeln1);\n",
    "int xKoord = 297;\n",
    "int yKoord = 247;\n",
    "int weite = 6;\n",
    "hintergrund.setColor(\"transparent\");\n",
    "hintergrund.setFill(48,92,232,0.1);\n",
    "double transparenz = 0.1;\n",
    "\n",
    "for ( int i = 0; i < 60; i++ ){\n",
    "    weite = weite + 10;\n",
    "    xKoord = xKoord - 5;\n",
    "    yKoord = yKoord - 5;\n",
    "    hintergrund.setWidth(weite);\n",
    "    hintergrund.setHeight(weite);\n",
    "    hintergrund.moveTo(xKoord,yKoord);\n",
    "    transparenz = transparenz + 0.01;\n",
    "    hintergrund.setFill(48,92,232,transparenz);\n",
    "    AlgoViz::sleep(5);\n",
    "}\n",
    "Rect button = Rect(140,430,300,40,3,3,&regeln1);\n",
    "button.setColor(\"transparent\");\n",
    "button.setFill(45,243,196,0.9);\n",
    "\n",
    "regeln1.drawText(\"So wird CrackyBird gespielt...\", 100, 50, 30, \"century\");\n",
    "regeln1.drawText(\"Hindernisse sind ..., die am Boden \", 50, 120, 20, \"century\");\n",
    "regeln1.drawText(\"oder über dir erscheinen können: \", 70, 160, 20, \"century\");\n",
    "regeln1.drawText(\"1) Springe über oder auf Hindernisse, \", 50, 200, 20, \"century\");\n",
    "regeln1.drawText(\"die am Boden erscheinen\", 70, 240, 20, \"century\");\n",
    "regeln1.drawText(\"2) Krieche unter Hindernissen durch,\", 50, 280, 20, \"century\");\n",
    "regeln1.drawText(\"die über dir erscheinen\", 70, 320, 20, \"century\");\n",
    "regeln1.drawText(\"3) Items sind ... \", 50, 360, 20, \"century\");\n",
    "regeln1.drawText(\"...Sammle sie ein, du kannst sie später nutzen!\", 70, 400, 20, \"century\");\n",
    "regeln1.drawText(\"So weit, so gut\", 180, 460, 30, \"century\");\n",
    "\n",
    "do {\n",
    "    maus = regeln1.waitForClick();\n",
    "} while ( maus.isLegal() == false || maus.x() < 140 || maus.x() > 440 || maus.y() < 430 || maus.y() > 470 );\n",
    "\n",
    "AlgoViz::clear();\n",
    "\n",
    "SVG regeln2 = SVG(600, 500);\n",
    "\n",
    "Rect hintergrund1 = Rect(0,0,600,500,&regeln2);\n",
    "hintergrund1.setColor(\"transparent\");\n",
    "hintergrund1.setFill(48,92,232,0.7);\n",
    "Rect button1 = Rect(140,430,300,40,3,3,&regeln2);\n",
    "button1.setColor(\"transparent\");\n",
    "button1.setFill(45,243,196,0.9);\n",
    "\n",
    "regeln2.drawText(\"So wird CrackyBird gespielt...\", 100, 50, 30, \"century\");\n",
    "regeln2.drawText(\"4) Pass auf deine schlimmsten Feinde auf, PRÜFUNGEN!\", 30, 120, 20, \"century\");\n",
    "regeln2.drawText(\"Töte sie, indem du AUF sie springst\", 50, 160, 20, \"century\");\n",
    "regeln2.drawText(\"...tötest du sie, so erhälst du ein weiteres Leben,\", 50, 200, 20, \"century\");\n",
    "regeln2.drawText(\"...andererseits verlierst du eins\", 50, 240, 20, \"century\");\n",
    "regeln2.drawText(\"5) Überlebst du ein Semester, dann kommst du ins nächste!\", 30, 280, 20, \"century\");\n",
    "regeln2.drawText(\"...Es wird also alles noch etwas kniffliger\", 50, 320, 20, \"century\");\n",
    "regeln2.drawText(\"Hab ich verstanden!\", 150, 460, 30, \"century\");\n",
    "\n",
    "do {\n",
    "    maus = regeln2.waitForClick();\n",
    "} while ( maus.isLegal() == false || maus.x() < 140 || maus.x() > 440 || maus.y() < 430 || maus.y() > 470 );\n",
    "\n",
    "AlgoViz::clear();\n",
    "\n",
    "SVG steuerung = SVG(600, 500);\n",
    "\n",
    "Rect hintergrund2 = Rect(0,0,600,500,&steuerung);\n",
    "hintergrund2.setColor(\"transparent\");\n",
    "hintergrund2.setFill(48,92,232,0.7);\n",
    "Rect button2 = Rect(140,430,300,40,3,3,&steuerung);\n",
    "button2.setColor(\"transparent\");\n",
    "button2.setFill(45,243,196,0.9);\n",
    "\n",
    "\n",
    "steuerung.drawText(\"Ein bisschen was zur Steuerung...\", 70, 50, 30, \"century\");\n",
    "steuerung.drawText(\"1) Sprung: Halte die Pfeiltaste nach OBEN gedrückt,\", 50, 120, 20, \"century\");\n",
    "steuerung.drawText(\"solange dein Sprung anhalten soll\", 70, 160, 20, \"century\");\n",
    "steuerung.drawText(\"...Aber pass auf! Du kannst auch nicht ewig springen!\", 70, 200, 20, \"century\");\n",
    "steuerung.drawText(\"2) Kriechen: Drücke einmal die Pfeiltaste nach UNTEN,\", 50, 240, 20, \"century\");\n",
    "steuerung.drawText(\"um unter einem Hindernis hindurchzukriechen\", 70, 280, 20, \"century\");\n",
    "steuerung.drawText(\"und drücke die Pfeiltaste nach OBEN, um wieder mit\", 70, 320, 20, \"century\");\n",
    "steuerung.drawText(\"dem Laufen zu beginnen\", 70, 360, 20, \"century\");\n",
    "steuerung.drawText(\"Kann's los gehen?!\", 160, 460, 30, \"century\");\n",
    "\n",
    "do {\n",
    "    maus = steuerung.waitForClick();\n",
    "} while ( maus.isLegal() == false || maus.x() < 140 || maus.x() > 440 || maus.y() < 440 || maus.y() > 470 );\n",
    "\n",
    "AlgoViz::clear();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "AlgoViz::clear();\n",
    "\n",
    "MouseState maus;\n",
    "\n",
    "SVG view = SVG(700, 500, \"Level 1\");\n",
    "Image backround = Image(\"erste_uni.jpg\",350,250,700,500,&view);\n",
    "view.drawRect(0,0,700,500);\n",
    "view.drawRect(110,0,80,500);\n",
    "\n",
    "view.setStatusMsg(\"Drücken Sie x zu beenden!\");\n",
    "\n",
    "Text anzeigeL = Text(\"Leben: 3\", 15, 20, &view);\n",
    "Text anzeigeP = Text(\"Punkte: 0\", 15, 37, &view);\n",
    "Text levelUp = Text(\"!!Achtung!! Es wird schneller\", 290, 100, &view);\n",
    "levelUp.setColor(\"red\");\n",
    "levelUp.hide();\n",
    "view.drawRect(110,400,80,80);\n",
    "\n",
    "\n",
    "Rect coolDown = Rect (450,5,200,28, &view);\n",
    "coolDown.setFill(\"LightBlue\");\n",
    "\n",
    "\n",
    "//int coolDownTime = 20;\n",
    "//bool coolDownBool = false;\n",
    "\n",
    "//Parameter\n",
    "int muenze = 10;\n",
    "int feind = 5;\n",
    "int geschwindigkeit = 5;\n",
    "\n",
    "//Spieler\n",
    "Protagonist mario = Protagonist(&view, &anzeigeP, &anzeigeL, geschwindigkeit);\n",
    "\n",
    "//Karte des Levels\n",
    "Level levelMap = Level(1,muenze,feind,&view);\n",
    "\n",
    "//Items\n",
    "Itemverwaltung bib = Itemverwaltung(geschwindigkeit,&view);\n",
    "\n",
    "\n",
    "bool blockade = false; // Einmal gedrückt, ist der Sprung vorerst nicht beeinflussbar...man kann aber \"Supersprung\" aktivieren\n",
    "bool blockade2 = false; // Blockiert jegliche Aktionen während des Runterspringens\n",
    "string taste = \"\";\n",
    "bool supersprungB = false;\n",
    "\n",
    "\n",
    "int i = 0;\n",
    "int zaehler = 0;\n",
    "int kollisionZ = 0;\n",
    "int yOben;\n",
    "int yObenFix;\n",
    "double vZaehler = 1;\n",
    "//double zaehlerUnten1 = 0;\n",
    "double zaehlerUnten2 = 0;\n",
    "int keinBildwechselZ = 0;\n",
    "\n",
    "\n",
    "//Hauptschleife\n",
    "while ( mario.getLeben() > 0 && taste != \"x\") {\n",
    "    \n",
    "    \n",
    "    if ( zaehlerUnten2 >= 300 ) {\n",
    "        \n",
    "        levelUp.hide();\n",
    "        \n",
    "        zaehler++;\n",
    "        if ( zaehler == 30 ) {\n",
    "            \n",
    "            cout << \"Level up!\" << endl;\n",
    "            \n",
    "            zaehler = 0;\n",
    "            \n",
    "            muenze = muenze + 3;\n",
    "            feind = feind + 3;\n",
    "            levelMap.buildLevel(muenze, feind);\n",
    "            \n",
    "            levelUp.show();\n",
    "            \n",
    "            double neuV = levelMap.getV() + 0.25;\n",
    "            vZaehler = neuV;\n",
    "            levelMap.setV(neuV);\n",
    "            mario.setV(neuV);\n",
    "            \n",
    "        }\n",
    "          \n",
    "       switch (levelMap.getEbene1()){\n",
    "               \n",
    "           case 0 :\n",
    "               break;\n",
    "        \n",
    "           case 1:  \n",
    "               \n",
    "               levelMap.add(0);\n",
    "               break;\n",
    "               \n",
    "           case 2: \n",
    "               \n",
    "               bib.addItem(0,1);\n",
    "               break;\n",
    "        \n",
    "           case 3:\n",
    "               \n",
    "               bib.addItem(0,2);\n",
    "               break;\n",
    "               \n",
    "        \n",
    "           case 4:\n",
    "               \n",
    "               bib.addItem(0,0);\n",
    "               break;\n",
    "       }\n",
    "        \n",
    "       switch (levelMap.getEbene2()){\n",
    "               \n",
    "           case 0 :\n",
    "               break;\n",
    "        \n",
    "           case 1:  \n",
    "               \n",
    "               levelMap.add(1);\n",
    "               break;\n",
    "               \n",
    "           case 2: \n",
    "               \n",
    "               bib.addItem(1,1);\n",
    "               break;\n",
    "        \n",
    "           case 3:\n",
    "               \n",
    "               bib.addItem(1,2);\n",
    "               break;\n",
    "               \n",
    "        \n",
    "           case 4:\n",
    "               \n",
    "               bib.addItem(1,0);\n",
    "               break;\n",
    "         \n",
    "       }\n",
    "        \n",
    "       switch (levelMap.getEbene3()){\n",
    "               \n",
    "           case 0 :\n",
    "                   break;\n",
    "        \n",
    "           case 1:  \n",
    "               \n",
    "               levelMap.add(2);\n",
    "               break;\n",
    "               \n",
    "           case 2: \n",
    "               \n",
    "               bib.addItem(2,1);\n",
    "               break;\n",
    "        \n",
    "           case 3:\n",
    "               \n",
    "               bib.addItem(2,2);\n",
    "               break;\n",
    "               \n",
    "        \n",
    "           case 4:\n",
    "               \n",
    "               bib.addItem(2,0);\n",
    "               break; \n",
    "        }\n",
    "        \n",
    "            zaehlerUnten2 = 0;\n",
    "    }\n",
    "    \n",
    "    bib.moveItems();\n",
    "    levelMap.move();\n",
    "    \n",
    "    taste = view.lastKey();\n",
    "    //cout << taste << endl;\n",
    "    yOben = levelMap.woIstBoden(mario.getY());\n",
    "    mario.setYoben(yOben);\n",
    "\n",
    "    if ( taste == \"ArrowUp\" && blockade2 == false ) {\n",
    "        \n",
    "        if ( mario.getBildwert() == 2 ) {\n",
    "            mario.switchBildaktiv(\"ArrowUp\");\n",
    "            \n",
    "        } else {\n",
    "            \n",
    "            if ( blockade == false ) {\n",
    "            yObenFix = yOben;\n",
    "            blockade = true;\n",
    "            }\n",
    "            \n",
    "            mario.springenhoch();\n",
    "            \n",
    "            if ( mario.getY() + 70 < yObenFix - 50) { \n",
    "                blockade = false;\n",
    "                blockade2 = true;\n",
    "            }\n",
    "        }\n",
    "    } else if ( taste == \"Shift\" && blockade2 == false ) {\n",
    "        if ( blockade == false ) {\n",
    "            yObenFix = yOben;\n",
    "            blockade = true;\n",
    "            mario.supersprung();\n",
    "            supersprungB = true;\n",
    "        }\n",
    "        \n",
    "        mario.springenhoch();\n",
    "        \n",
    "        if ( mario.getY() + 280 < yObenFix - 50 ) {\n",
    "            blockade = false;\n",
    "            blockade2 = true;\n",
    "        }\n",
    "            \n",
    "    } else if ( taste != \"ArrowUp\" && taste != \"Shift\" && blockade == true ) {\n",
    "        \n",
    "        if ( taste == \" \" ){\n",
    "            if ( mario.getBildwert() != 3 ) {\n",
    "                mario.switchBildaktiv(\"fight\");\n",
    "            }\n",
    "        }\n",
    "        \n",
    "        if ( supersprungB == true ) {\n",
    "            \n",
    "            mario.springenhoch();\n",
    "            \n",
    "            if ( mario.getY() + 280 < yObenFix - 50 ) {\n",
    "                blockade = false;\n",
    "                blockade2 = true;\n",
    "            }\n",
    "            \n",
    "        } else {\n",
    "            \n",
    "            mario.springenhoch();\n",
    "            \n",
    "            if ( mario.getY() + 70 < yObenFix - 50 ) {\n",
    "                blockade = false;\n",
    "                blockade2 = true;\n",
    "            }\n",
    "        }\n",
    "    \n",
    "    } else if ( (blockade2 == true) || ( blockade == false && blockade2 == false && taste != \"ArrowDown\") ) {\n",
    "     \n",
    "        if ( taste == \" \" ) {\n",
    "            if ( mario.getBildwert() != 3 ) {\n",
    "                mario.switchBildaktiv(\"fight\");\n",
    "            }\n",
    "        }\n",
    "        \n",
    "        if ( mario.getY() < yOben - 50 ) {\n",
    "            mario.springenrunter();\n",
    "            //cout << mario.getY() << endl;\n",
    "        }\n",
    "    \n",
    "        if ( mario.getY() >= yOben - 50 ) {\n",
    "            blockade2 = false;\n",
    "            supersprungB = false;\n",
    "            mario.setSupersprung(false);\n",
    "        }\n",
    "    \n",
    "    } else if ( taste == \"ArrowDown\" && blockade == false && blockade2 == false ) {\n",
    "        \n",
    "        mario.switchBildaktiv(\"ArrowDown\");\n",
    "        \n",
    "    }\n",
    "\n",
    "    //zaehlerUnten1 = zaehlerUnten1 + vZaehler;\n",
    "    zaehlerUnten2 = zaehlerUnten2 + vZaehler;\n",
    "    i++;\n",
    "    \n",
    "    if ( i == 50 ) {\n",
    "        i = 0;\n",
    "        mario.switchBildpassiv();\n",
    "    }\n",
    "    \n",
    "    if ( mario.getBildwert() == 3 ) {\n",
    "        \n",
    "        keinBildwechselZ++;\n",
    "        coolDown.setWidth(coolDown.getWidth() - 1);\n",
    "        \n",
    "        if ( keinBildwechselZ == 200 ) {\n",
    "            coolDown.setWidth(200);\n",
    "            keinBildwechselZ = 0;\n",
    "            mario.switchBildaktiv(\"OutOfFight\");\n",
    "        }\n",
    "    }\n",
    "\n",
    "\n",
    "    /*(taste == \" \" && coolDownBool == false ){\n",
    "        \n",
    "        coolDownBool = true;\n",
    "        \n",
    "    }\n",
    "    \n",
    "    if( taste == \" \" && coolDownBool){\n",
    "        \n",
    "        if(coolDownTime != 0){\n",
    "            \n",
    "           coolDownTime--;\n",
    "           int breite = coolDown.getWidth();\n",
    "           coolDown.setWidth(breite - 10);\n",
    "        \n",
    "        }else{\n",
    "            coolDownBool = false;\n",
    "            coolDownTime = 20;\n",
    "            coolDown.setWidth(200);\n",
    "            \n",
    "        }\n",
    "    }  \n",
    "    */\n",
    "    \n",
    "    // Hinderniskollision\n",
    "    if ( kollisionZ > 0 ) {\n",
    "        kollisionZ++;\n",
    "        if ( kollisionZ == 250 ) {\n",
    "            kollisionZ = 0;\n",
    "            mario.setBlinken(false);\n",
    "        }\n",
    "    }\n",
    "\n",
    "\n",
    "        \n",
    "    if ( kollisionZ == 0 ) {\n",
    "        int rueckgabe = levelMap.kollidiert(mario.getY(), mario.getBildwert());\n",
    "        \n",
    "        if ( rueckgabe != 600 ) {\n",
    "            if ( mario.getY() < rueckgabe ) {\n",
    "                mario.moveTo(rueckgabe - 50);\n",
    "            } else {\n",
    "                mario.moveTo(yOben - 50);\n",
    "            }\n",
    "            mario.setLeben(-1);\n",
    "            mario.setBlinken(true);\n",
    "            kollisionZ++;\n",
    "        }\n",
    "    }\n",
    "    \n",
    "    //Kollision mit Items\n",
    " \n",
    "    switch (bib.kollision(mario.getY(), mario.getBildwert())){\n",
    "\n",
    "       case -3:  \n",
    "\n",
    "           mario.setPunkte(-3);\n",
    "           break;\n",
    "\n",
    "       case -1: \n",
    "\n",
    "           mario.setLeben(-1);\n",
    "           break;\n",
    "\n",
    "       case 1:\n",
    "\n",
    "           mario.setLeben(1);\n",
    "           break;\n",
    "\n",
    "\n",
    "       case 2:\n",
    "\n",
    "           mario.setPunkte(1);\n",
    "           break; \n",
    "            \n",
    "        case 3: \n",
    "\n",
    "           mario.setPunkte(3);\n",
    "           break;\n",
    "\n",
    "    }\n",
    "        \n",
    "    zaehlerUnten2 = 0;\n",
    "}\n",
    "\n",
    "view.setStatusMsg(\"Game Over!\");\n",
    "Rect schwarz = Rect (0,0,700,500,&view);\n",
    "schwarz.setFill(48,92,232);\n",
    "Image tot = Image(\"../img/Dungeon/Skelett.png\",350,400,150,150,&view);\n",
    "view.drawText(\"GAME OVER\", 200, 150, 40, \"century\");\n",
    "view.drawText(\"Punkte: \" + to_string(mario.getPunkte()), 280, 230, 25, \"century\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "C++17",
   "language": "C++17",
   "name": "xcpp17"
  },
  "language_info": {
   "codemirror_mode": "text/x-c++src",
   "file_extension": ".cpp",
   "mimetype": "text/x-c++src",
   "name": "c++",
   "version": "17"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
